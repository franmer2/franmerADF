{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Movies",
						"type": "DatasetReference"
					},
					"name": "MoviesStorageAccount"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Movies_AzureSqlTable",
						"type": "DatasetReference"
					},
					"name": "WriteToAzureSQL"
				}
			],
			"transformations": [
				{
					"name": "SelectColumns"
				},
				{
					"name": "FilterMovies"
				},
				{
					"name": "DerivedColumn"
				},
				{
					"name": "Window"
				},
				{
					"name": "Aggregate"
				}
			],
			"script": "source(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\t{Rotton Tomato} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MoviesStorageAccount\nMoviesStorageAccount select(mapColumn(\n\t\tmovie,\n\t\ttitle,\n\t\tgenres,\n\t\tyear,\n\t\t{Rotten Tomato} = {Rotton Tomato}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nSelectColumns filter(toInteger(year) > 1950) ~> FilterMovies\nFilterMovies derive({Primary Genre} = iif(locate(\"|\",genres) > 1, left(genres, locate(\"|\",genres)-1), genres)) ~> DerivedColumn\nDerivedColumn window(over({Primary Genre},\n\t\tyear),\n\tdesc({Rotten Tomato}, true),\n\tRatingsRank = rank()) ~> Window\nWindow aggregate(groupBy({Primary Genre},\n\t\tyear),\n\tAverageRating = avg(toInteger({Rotten Tomato})),\n\t\tHighestRated = first(title),\n\t\tLowestRated = last(title),\n\t\tNumberOfMovies = count()) ~> Aggregate\nAggregate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> WriteToAzureSQL"
		}
	}
}